name: Deploy Weather App to K8s

on:
  workflow_dispatch:  

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3 
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}  
          password: ${{ secrets.GHCR_TOKEN }} 


      - name: Build Frontend Docker Image
        run: docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/weather-app-frontend:latest ./frontend

      - name: Build Backend Docker Image
        run: docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/weather-app-backend:latest ./backend

      - name: Push Frontend Docker Image to GHCR
        run: docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/weather-app-frontend:latest

      - name: Push Backend Docker Image to GHCR
        run: docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/weather-app-backend:latest

  deploy:
    name: Deploy to K8s
    needs: build-and-push  
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up SSH Key for Tunneling
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.MASTER_NODE_IP }} >> ~/.ssh/known_hosts

      - name: Set Up SSH Tunnel to Kubernetes Master
        run: |
          # Set up the SSH tunnel to the Kubernetes master node
          ssh -o StrictHostKeyChecking=no -f -N -L 6443:localhost:6443 root@${{ secrets.MASTER_NODE_IP }}

      - name: Setup Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Create Namespace
        run: kubectl create namespace weather-app

      - name: Deploy Frontend to Kubernetes
        run: kubectl apply -f K8s/Frontend/

      - name: Deploy Backend to Kubernetes
        run: kubectl apply -f K8s/Backend/

      - name: Verify Deployment
        run: kubectl get pods -n weather-app
